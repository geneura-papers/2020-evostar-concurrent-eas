\documentclass[runningheads]{llncs} % -*- mode: LaTeX -*- 
%
\usepackage{graphicx}
% Used for displaying a sample figure. If possible, figure files should
% be included in EPS format.
%
% If you use the hyperref package, please uncomment the following line
% to display URLs in blue roman font according to Springer's eBook style:
% \renewcommand\UrlFont{\color{blue}\rmfamily}

\begin{document}
%
\title{Testing the intermediate disturbance hypothesis in concurrent evolutionary algorithms.}
%
%\titlerunning{Abbreviated paper title}
% If the paper title is too long for the running head, you can set
% an abbreviated paper title here
%
\author{JJ Merelo\inst{1}\orcidID{0000-1111-2222-3333} \and
  Mario García Valdez\inst{2}\orcidID{1111-2222-3333-4444}}
%
\authorrunning{JJ Merelo et al.}
\institute{Universidad de Granada, Granada, Spain\\
  \email{jmerelo@ugr.es}\\
  \and
Instituto Tecnológico de Tijuana, Tijuana, Baja California, México\\
\email{mario@tectijuana.edu.mx}}
%
\maketitle              % typeset the header of the contribution
%
\begin{abstract}
Concurrency is a powerful abstraction that can be used to model and
implement evolutionary algorithms, but it breaks open many degrees of
freedom, one of which is what the different populations in different
threads can do and how they interact (via combination of populations)
with each other. One of them is synchrony: although threads can run
asynchronously, they often perform the same amount of work, which
brings them to a (rough) synchrony. Our intention in this paper is to
test if the intermediate disturbance hypothesis hold: this kind of
synchrony is a small disturbance, which together with a big
disturbance will not boost diversity; however, a intermediate
disturbance hypothesis will. We will test different ways of creating
this intermediate disturbance by changing how different threads
operate or disturbing it in some other ways. 

\keywords{Intermediate disturbance hypothesis  \and evolutionary algorithms \and Concurrency \and Distributed algorithms.}
\end{abstract}

\section{Introduction}

The intermediate disturbance hypothesis was introduced by several researchers in
the seventies \cite{connell1978diversity} to explain the diversity
found in different ecosystems, and it states \cite{reece2014campbell}
that
\begin{quote}
  ... Moderate levels of disturbance foster greater species diver-
sity than do low or high levels of disturbance
\end{quote}

These levels refer to amplitude as well as frequency; a disturbance
happening too often will wipe out all diversity, if it happens rarely
the system reaches equilibrium and there will be species that have
some competitive advantage dominating the ecosystem; in the same way,
a high level of disturbance like temperatures that change a lot will
not allow species to thrive except those that can stand them, a
moderate temperature range across day and night will allow a whole lot
of adapted species to survive together, in the same way it happens in
the rainforest.

Diversity is essential in evolutionary algorithms, specially in
distributed or concurrent evolutionary algorithms, where {\em
  disturbances} will usually take the form of changes in the
population, usually selection or insertion policies; as a matter of
fact, we investigated this kind of hypothesis in \cite{jj:2008:PPSN},
finding that, effectively, making populations evolve asynchronously so
that they, by being in a different state of evolution, can result in
an {\em intermediate} disturbance by interchanging members of the
population, can result in a boost to the performance of an algorithm,
offering better results than synchronously evolving populations or
other setups with a lesser degree of disturbances.

Concurrent evolutionary algorithms are placed at a different level of
abstraction than distributed algorithms; they can be run in parallel
or not, distributed over many computers or simply many processors, but
they use high-level language constructs such as channels, tasks and
messages that ensure that there are no deadlocks and every task runs
smoothly until it's finished. Languages such as Raku (formerly known
as Perl 6) \cite{lenzperl}, include channels as part of the
fundamental data structures, and using them we can implement
concurrent evolutionary algorithm following Hoare's Communicating
Sequential Processes model \cite{Hoare:1978:CSP:359576.359585}.

In these kind of evolutionary algorithms
\cite{Merelo:2018:MEA:3205651.3208317,DBLP:conf/evoW/GuervosLCVG19,merelo2019scaling,10.1007/978-3-030-00350-0_2}
there is no {\em migration} {\em per se}, although populations are not
moved from one {\em island} to another, but {\em merged}, the
intermediate disturbance principle should apply; we should {\em let
  nature be our guide} \cite{Zen} and apply it to achieve a certain
level or performance, scaling or both.

However, there's no way to introduce those intermediate disturbances
from first principles, and in such a way that it does not really
change the nature of the algorithm in fundamental ways. For starters,
in several occasions this intermediate disturbance effect just happens
in asynchronous evolutionary algorithms
\cite{DBLP:journals/corr/GuervosG15}, so we would be trying to add
intermediate disturbances to something that is already intermediately
disturbed, creating too much disturbance indeed. Second, the only way
we have to actually find out that it works is by observing its effects
and discarding other possible causes; in a word, we will be trying to
heuristically measure the effects of different types of disturbances,
and pick the one that has the more positive effect in algorithmic,
performance terms, or both.

The rest of the paper is organized as follows. Next we will present
the state of the art in the use or observation of the intermediate
disturbance hypothesis in bioinspired algorithms; next we will
describe the experimental setup for this papers. Section \ref{sec:res}
will present the results, followed by a section on discussions and
future lines of work that will close the paper.

\section{State of the art}

The intermediate disturbance hypothesis
\cite{connell1978diversity,grime1973competitive} has not had a long
run in the area of bioinspired algorithms. As a matter of fact, using
{\em big} disturbance such as hypermutation has been more popular than
that. Even so, it has been mentioned with a certain frequency in this
area.

We introduced explicitly this hypothesis in the evolutionary algorithm
literature in the above mentioned paper, \cite{jj:2008:PPSN}. 


\section{Acknowledgements}

We are grateful to Jonathan Worthington and the rest of the Edument team for their disposition to help with implementation problems and provide suggestions to make this work correctly. This is extended to the rest of the Raku development team, which is an excellent and technically knowledgeable community committed to creating a great language. This paper has been supported in part by projects DeepBio (TIN2017-85727-C4-2-P).

\bibliographystyle{splncs04}
\bibliography{geneura,concurrent,GA-general,perl6}

\end{document}
